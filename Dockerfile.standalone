# Standalone Dockerfile for LavaMusic Discord Bot
FROM node:lts-alpine3.22

WORKDIR /opt/lavamusic

# Install dependencies
RUN apk add --no-cache git python3 make g++ openssl openssl-dev curl dumb-init

# Create user
RUN addgroup -g 322 -S lavamusic && adduser -u 322 -S lavamusic -G lavamusic

# Clone repository
ARG REPO_URL=https://github.com/shaneomac1337/lavamusic.git
ARG BRANCH=main
RUN git clone --depth 1 --branch ${BRANCH} ${REPO_URL} .

# Create entrypoint script
RUN echo '#!/bin/sh' > /entrypoint.sh && \
    echo 'set -e' >> /entrypoint.sh && \
    echo 'echo "ðŸŽµ Starting LavaMusic..."' >> /entrypoint.sh && \
    echo 'echo "ðŸ“¦ Running database migrations..."' >> /entrypoint.sh && \
    echo 'npx prisma migrate deploy' >> /entrypoint.sh && \
    echo 'echo "ðŸ”§ Generating Prisma client..."' >> /entrypoint.sh && \
    echo 'npx prisma generate' >> /entrypoint.sh && \
    echo 'echo "ðŸš€ Starting bot..."' >> /entrypoint.sh && \
    echo 'exec "$@"' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Install dependencies, build, and generate Prisma client
RUN npm install && npm run build && npx prisma generate

# Clean up build dependencies but keep runtime ones
RUN apk del git python3 make g++ && npm cache clean --force

# Create necessary directories and set permissions
RUN mkdir -p logs prisma && \
    chown -R lavamusic:lavamusic /opt/lavamusic

USER lavamusic

EXPOSE 3001

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

ENV NODE_ENV=production NODE_OPTIONS="--enable-source-maps"

# Use entrypoint script
ENTRYPOINT ["/entrypoint.sh"]
CMD ["node", "dist/index.js"]
